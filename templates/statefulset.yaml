apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.numReplicas }}
  serviceName: {{ template "fullname" . }}
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      restartPolicy: Always
      containers:
        - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          name: proxysql
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: {{ .Values.mysql.port }}
              name: proxysql-mysql
            - containerPort: {{ .Values.proxysql.admin.port }}
              name: proxysql-admin
{{ if .Values.proxysql.monitorConfigChange }}
          env:
            - name: MONITOR_CONFIG_CHANGE
              value: "{{ .Values.proxysql.monitorConfigChange }}"
{{ end }}
          readinessProbe:
            initialDelaySeconds: 0
            periodSeconds: 1
            tcpSocket:
              port: {{ .Values.proxysql.admin.port }}
          livenessProbe:
            initialDelaySeconds: 0
            periodSeconds: 1
            tcpSocket:
              port: {{ .Values.proxysql.admin.port }}
          volumeMounts:
            {{ if .Values.pvc.enabled }}
            - mountPath: {{ .Values.proxysql.dataDir }}
              name: {{ template "fullname" . }}
            {{ end }}
            - mountPath: /etc/proxysql.cnf
              name: proxysql
              subPath: proxysql.cnf
          {{ if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{ end }}
      volumes:
        - name: proxysql
          configMap:
            name: {{ template "fullname" . }}
            defaultMode: 0777
      {{ if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{ end }}
  {{ if .Values.pvc.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ template "fullname" . }}
      annotations:
        volume.beta.kubernetes.io/storage-class: "{{ .Values.pvc.storageClass }}"
    spec:
      accessModes: [ "{{ .Values.pvc.accessModes }}" ]
      resources:
        requests:
          storage: {{ .Values.pvc.storage }}
  {{ end }}